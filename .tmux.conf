#==========================================
# URL: https://github.com/wklken/k-tmux
# Author:  wklken
# Version: 0.1.1
# Email: wklken@yeah.net
# ReadMe: README.md
# Donation: http://www.wklken.me/pages/donation.html
# Last_modify: 2015-08-06
#==========================================
# Dependecny:
#    1. brew install reattach-to-user-namespace
#    2. gem install tmuxinator
#    3. vim: christoomey/vim-tmux-navigator


#--------------------------- base config begin -------------------------------

# 全局设置
setw -g xterm-keys on
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
set -gq status-utf8 on                            # enable utf-8
set-option -g default-terminal "screen-256color"    # use 256 colors
set -ga terminal-overrides ",*256col*:Tc"
set-option -g history-limit 100000                # scrollback buffer n lines
set-option -g display-time 5000                   # 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000                    # 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set-window-option -g display-panes-time 1500
set-option -g repeat-time 0                       # Allow the arrow key to be used immediately after changing windows

set-option -g renumber-windows on                 # window 0, 1, 2, remove 1, renumber to 0, 1

# Set window notifications
setw -g monitor-activity off
set -g visual-activity off

# use C-q, since it's on the home row and easier to hit than C-b
set-option -g prefix C-q
unbind-key C-b
# press C-q-q send prefix to nested session. (sush as tmux in ssh
bind-key q send-prefix

# bind a reload key: prefix+R
bind R source-file ~/.tmux.conf \; display-message "Config reloaded.."

# -------------------------------- session begin --------------------------------
# bind -r ( switch-client -p
# bind -r ) switch-client -n

# session切换
unbind-key j
bind-key j switch-client -n
unbind-key k
bind-key k switch-client -p

unbind-key n
bind-key n new-session

# quickly jump session by session-name: prefix+F
bind F command-prompt -p '(find-session)' 'switchc -t %1'

# -------------------------------- session end --------------------------------

# -------------------------------- window begin --------------------------------
set-option -g base-index 1                        #窗口的初始序号；默认为0，这里设置为1

set-window-option -g pane-base-index 1            # panes index start at 1, setw means set-window-option
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# [prefix-c] 创建新窗口
bind-key c new-window -c '#{pane_current_path}'
# pprefix-x] 关闭窗口
unbind-key &
bind-key x confirm-before -p "kill-window #W? (y/n)" kill-window
# [prefix-数字] 切换窗口
# [prefix-p] 切换窗口

# [prefix-t/T] 切换窗口
# bind-key t next-window
# bind-key T previous-window
# bind-key space next-window
# bind-key bspace previous-window

# [prefix-Ctrl-o] 窗口轮转
#bind-key C-o rotate-window

# 窗口切换
unbind-key h
bind-key h select-window -p
unbind-key l
bind-key l select-window -n

# -------------------------------- window end --------------------------------

# -------------------------------- pane begin --------------------------------
unbind '"'
unbind %
# key bindings for horizontal and vertical panes
# 键 [\|] 和 [_-] 少敲一个shift键
bind-key \\ split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# 窗口间切换
# [prefix-hjkl] pane之间移动
# unbind-key h
# bind-key h select-pane -L
# unbind-key j
# bind-key j select-pane -D
# unbind-key k
# bind-key k select-pane -U
# unbind-key l
# bind-key l select-pane -R
# smart pane switching with awareness of vim splits
# [Ctrl-hjkl] pane之间移动
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-l) || tmux select-pane -R"
# [Ctrl-l] 左右两个切  [Ctrl-\] 最近的两个切换
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

# [prefix-a] 展示窗口数字并选择跳转
bind-key a display-panes
# bind-key a last-pane # 绑什么好?

# 窗口大小调整
# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# toggle zoomed pane
bind ` resize-pane -Z

# layout
# [prefix-space]
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# -------------------------------- pane end --------------------------------

# -------------------------------- move/copy/paste begin --------------------------------
# use vi mode
# vi is good  把 Tmux 设为 vi 模式，使其与 Vim 的操作更加接近
setw -g mode-keys vi

# [ 进入复制，space键开始选择问题  方向键移动， / 回车复制  / ] 黏贴
bind-key [ copy-mode
bind-key ] paste-buffer

# Copy and paste like in vim
# p 换成paste
unbind p
bind p paste-buffer


# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line

# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# for osx
# Enable native Mac OS X copy/paste  对于mac用户，可以复制到系统剪贴板
# set -g default-command "reattach-to-user-namespace -l $SHELL"
# set -g default-command "exec $SHELL -l"
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
# -------------------------------- move/copy/paste end --------------------------------

# -------------------------------- mouse begin --------------------------------
# mouse behavior
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
setw -gq mode-mouse on
set -gq mouse-select-pane on
set -gq mouse-resize-pane on
set -gq mouse-select-window on
# -------------------------------- mouse end --------------------------------

# -------------------------------- status line begin  --------------------------------
# 颜色
# set-option -g status-bg black
# set-option -g status-fg white

set -g status-fg '#eeeeee'
set -g status-bg '#383838'
# set -g status-left-fg '#eeeeee'
# set -g status-left-bg '#383838'
# set -g status-right-fg '#eeeeee'
# set -g status-right-bg '#383838'

set -g status-left-length 90
set -g status-right-length 90

set -g status-interval 1

# 对齐方式
set-option -g status-justify centre

# 左下角
# set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'
set-option -g status-left "#[fg=#525252,bold,bg=#b0d8fc] S-#S #[fg=#b0d8fc,bg=#3dd9ff] #[fg=#525252,bold]W-#I:P-#P #[fg=#3dd9ff,bg=#383838] #{prefix_highlight}"

# 窗口列表
setw -g automatic-rename on
# set-window-option -g window-status-current-fg magenta
set-window-option -g window-status-format '#[fg=#b0d8fc]#I:#W'
set-window-option -g window-status-current-format '#[fg=#525252,bold,bg=#3dd9ff][#I#[fg=#525252,bold]:#[fg=#525252,bold]#W]'

# 右下角
set -g status-right "#[fg=#b0d8fc,bg=#383838]%H:%M #[fg=#3dd9ff,bg=#383838]#[fg=#525252,bold,bg=#3dd9ff] Battery[#{battery_icon}#{battery_percentage}] #[fg=#b0d8fc,bg=#3dd9ff]#[fg=#525252,bold,bg=#b0d8fc] WIFI[#(networksetup -getairportnetwork en0 | awk -F': ' '{print $2}')] "

# -------------------------------- status line end --------------------------------
# -------------------------------- color begin --------------------------------

# pane border colors
# set-option -g pane-active-border-fg '#00bfff'
# set-option -g pane-border-fg '#ffcc55'
# set -g pane-border-fg colour245
# set -g pane-active-border-fg colour39

# -------------------------------- color end --------------------------------

#--------------------------- base config end -------------------------------

#--------------------------- plugins config begin --------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'littlekey/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'christoomey/vim-tmux-navigator'

# ------------------------ tmux-cpu begin ---------------------------

set -g @cpu_low_icon "ᚋ"
set -g @cpu_medium_icon "ᚌ"
set -g @cpu_high_icon "ᚍ"

# ------------------------ tmux-cpu end ---------------------------

# ------------------------ tmux-battery begin ---------------------------

set -g @batt_charging_icon ' '

# ------------------------ tmux-battery end ---------------------------

# ------------------------ tmux-resurrect begin ------------------------------

# for vim restoring vim sessions
# set -g @resurrect-strategy-vim 'session'
# restoring pane contents
# set -g @resurrect-capture-pane-contents 'on'
# restoring bash history (experimental)
# set -g @resurrect-save-shell-history 'on'

# ------------------------- tmux-resurrect end -------------------------------

# --------------------- tmux-prefix-highlight begin -----------------------

set -g @prefix_highlight_fg '#b0d8fc,bold'
set -g @prefix_highlight_bg '#383838'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg_black,bg=yellow,blod'

set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'

# ---------------------- tmux-prefix-highlight end ------------------------

run '~/.tmux/plugins/tpm/tpm'

#--------------------------- plugins config end ----------------------------
